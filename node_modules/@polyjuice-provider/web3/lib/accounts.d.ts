import { provider, AccountsBase, TransactionConfig, SignedTransaction } from "web3-core";
import { Abi, AbiItems, EthTransaction, Godwoker } from "@polyjuice-provider/base";
import { PolyjuiceConfig } from "./providers";
import BN from "bn.js";
import { RawL2Transaction } from "@polyjuice-provider/godwoken";
declare const Accounts: any;
export interface PolyjuiceAccounts extends AccountsBase {
    constructor(polyjuiceConfig: PolyjuiceConfig, provider?: provider): any;
}
export declare class PolyjuiceAccounts extends Accounts {
    godwoker: Godwoker;
    abi: Abi;
    constructor(polyjuiceConfig: PolyjuiceConfig, provider?: provider);
    setAbi(abiItems: AbiItems): void;
    signTransaction(_tx: TransactionConfig, privateKey: string, callback?: (error: Error, signedTransaction?: SignedTransaction) => void): Promise<SignedTransaction>;
}
export declare function transactionConfigToPolyjuiceEthTransaction(tx: TransactionConfig): EthTransaction;
export declare function formatEthTransaction({ from, to, value, gas, gasPrice, data, nonce, }: {
    from: any;
    to: any;
    value: any;
    gas: any;
    gasPrice: any;
    data: any;
    nonce: any;
}): EthTransaction;
export declare function TxConfigValueTypeToString(value: number | string | BN): string;
export declare function calcPolyjuiceTxHash(tx: RawL2Transaction): string;
export {};

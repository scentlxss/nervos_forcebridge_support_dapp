import { Builder, BuilderOption } from './builder';
import { Address, Amount, Cell, Transaction, SUDT } from '../models';
import { SUDTCollector } from '../collectors/sudt-collector';
export declare class SimpleSUDTBuilder extends Builder {
    private sudt;
    private address;
    private amount;
    protected options: BuilderOption;
    fee: Amount;
    inputCells: Cell[];
    outputCells: Cell[];
    constructor(sudt: SUDT, address: Address, amount: Amount, options?: BuilderOption);
    build(): Promise<Transaction>;
    /**
     * build a transaction with only sudt cells
     */
    buildSudtCells(): Promise<{
        tx: Transaction;
        neededCKB: Amount;
    }>;
    /**
     * Fetch pure CKB cells to fullfill the need CKB amount
     * @param ckbAmount  needed CKB amount
     */
    buildCKBCells(ckbAmount: any): Promise<Transaction>;
    /**
     * subtract specified ckb amount from sender's outputs
     * @param ckbAmount
     */
    private extractCKBFromOutputs;
    /**
     * build tx based on inputs and outputs, and calculate the tx fee
     */
    private rectifyTx;
    getCollector(): import("..").Collector | SUDTCollector;
}

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Script = void 0;
const address_1 = require("./address");
const utils_1 = require("../utils");
const ckb_js_toolkit_1 = require("../ckb-js-toolkit");
const core_1 = require("../ckb-lumos/core");
const hashers_1 = require("../hashers");
class Script {
    constructor(codeHash, args, hashType) {
        this.codeHash = codeHash;
        this.args = args;
        this.hashType = hashType;
    }
    static fromRPC(data) {
        if (!data)
            return undefined;
        ckb_js_toolkit_1.validators.ValidateScript(data);
        return new Script(data.code_hash, data.args, data.hash_type);
    }
    sameWith(script) {
        ckb_js_toolkit_1.validators.ValidateScript(ckb_js_toolkit_1.transformers.TransformScript(script));
        return (this.args === script.args &&
            this.codeHash === script.codeHash &&
            this.hashType === script.hashType);
    }
    validate() {
        ckb_js_toolkit_1.validators.ValidateScript(ckb_js_toolkit_1.transformers.TransformScript(this));
        return true;
    }
    serializeJson() {
        return {
            code_hash: this.codeHash,
            args: this.args,
            hash_type: this.hashType,
        };
    }
    toHash() {
        return new hashers_1.Blake2bHasher()
            .update(core_1.SerializeScript(ckb_js_toolkit_1.normalizers.NormalizeScript(ckb_js_toolkit_1.transformers.TransformScript(this))))
            .digest()
            .serializeJson();
    }
    toAddress(prefix = address_1.getDefaultPrefix()) {
        const address = utils_1.generateAddress(this.serializeJson(), {
            config: utils_1.LumosConfigs[prefix],
        });
        return new address_1.Address(address, address_1.AddressType.ckb);
    }
}
exports.Script = Script;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NyaXB0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL21vZGVscy9zY3JpcHQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EsdUNBS21CO0FBQ25CLG9DQUF5RDtBQUN6RCxzREFBMEU7QUFDMUUsNENBQW9EO0FBQ3BELHdDQUEyQztBQUUzQyxNQUFhLE1BQU07SUFPakIsWUFDUyxRQUFnQixFQUNoQixJQUFZLEVBQ1osUUFBa0I7UUFGbEIsYUFBUSxHQUFSLFFBQVEsQ0FBUTtRQUNoQixTQUFJLEdBQUosSUFBSSxDQUFRO1FBQ1osYUFBUSxHQUFSLFFBQVEsQ0FBVTtJQUN4QixDQUFDO0lBVkosTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFTO1FBQ3RCLElBQUksQ0FBQyxJQUFJO1lBQUUsT0FBTyxTQUFTLENBQUM7UUFDNUIsMkJBQVUsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDaEMsT0FBTyxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQy9ELENBQUM7SUFRRCxRQUFRLENBQUMsTUFBYztRQUNyQiwyQkFBVSxDQUFDLGNBQWMsQ0FBQyw2QkFBWSxDQUFDLGVBQWUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1FBQ2hFLE9BQU8sQ0FDTCxJQUFJLENBQUMsSUFBSSxLQUFLLE1BQU0sQ0FBQyxJQUFJO1lBQ3pCLElBQUksQ0FBQyxRQUFRLEtBQUssTUFBTSxDQUFDLFFBQVE7WUFDakMsSUFBSSxDQUFDLFFBQVEsS0FBSyxNQUFNLENBQUMsUUFBUSxDQUNsQyxDQUFDO0lBQ0osQ0FBQztJQUVELFFBQVE7UUFDTiwyQkFBVSxDQUFDLGNBQWMsQ0FBQyw2QkFBWSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQzlELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVELGFBQWE7UUFDWCxPQUFPO1lBQ0wsU0FBUyxFQUFFLElBQUksQ0FBQyxRQUFRO1lBQ3hCLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSTtZQUNmLFNBQVMsRUFBRSxJQUFJLENBQUMsUUFBUTtTQUN6QixDQUFDO0lBQ0osQ0FBQztJQUVELE1BQU07UUFDSixPQUFPLElBQUksdUJBQWEsRUFBRTthQUN2QixNQUFNLENBQ0wsc0JBQWUsQ0FDYiw0QkFBVyxDQUFDLGVBQWUsQ0FBQyw2QkFBWSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUNoRSxDQUNGO2FBQ0EsTUFBTSxFQUFFO2FBQ1IsYUFBYSxFQUFFLENBQUM7SUFDckIsQ0FBQztJQUVELFNBQVMsQ0FBQyxTQUF3QiwwQkFBZ0IsRUFBRTtRQUNsRCxNQUFNLE9BQU8sR0FBRyx1QkFBZSxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUUsRUFBRTtZQUNwRCxNQUFNLEVBQUUsb0JBQVksQ0FBQyxNQUFNLENBQUM7U0FDN0IsQ0FBQyxDQUFDO1FBRUgsT0FBTyxJQUFJLGlCQUFPLENBQUMsT0FBTyxFQUFFLHFCQUFXLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDL0MsQ0FBQztDQUNGO0FBckRELHdCQXFEQyJ9
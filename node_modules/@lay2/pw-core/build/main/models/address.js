"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Address = exports.getDefaultPrefix = exports.LockType = exports.AddressType = exports.AddressPrefix = void 0;
const script_1 = require("./script");
const core_1 = __importStar(require("../core"));
const interfaces_1 = require("../interfaces");
const eosjs_ecc_1 = __importDefault(require("eosjs-ecc"));
const utils_1 = require("../utils");
const bs58_1 = __importDefault(require("bs58"));
const axios_1 = __importDefault(require("axios"));
const core_2 = __importDefault(require("@scatterjs/core"));
const hashers_1 = require("../hashers");
const ckb_js_toolkit_1 = require("../ckb-js-toolkit");
const amount_1 = require("./amount");
var AddressPrefix;
(function (AddressPrefix) {
    AddressPrefix[AddressPrefix["ckb"] = 0] = "ckb";
    AddressPrefix[AddressPrefix["ckt"] = 1] = "ckt";
})(AddressPrefix = exports.AddressPrefix || (exports.AddressPrefix = {}));
var AddressType;
(function (AddressType) {
    AddressType[AddressType["ckb"] = 0] = "ckb";
    AddressType[AddressType["eth"] = 1] = "eth";
    AddressType[AddressType["eos"] = 2] = "eos";
    AddressType[AddressType["tron"] = 3] = "tron";
    // libra,
})(AddressType = exports.AddressType || (exports.AddressType = {}));
var LockType;
(function (LockType) {
    LockType[LockType["default"] = 0] = "default";
    LockType[LockType["multisig"] = 1] = "multisig";
    LockType[LockType["pw"] = 2] = "pw";
})(LockType = exports.LockType || (exports.LockType = {}));
function getDefaultPrefix() {
    return core_1.default.chainId === core_1.ChainID.ckb ? AddressPrefix.ckb : AddressPrefix.ckt;
}
exports.getDefaultPrefix = getDefaultPrefix;
class Address {
    constructor(addressString, addressType, lockArgs) {
        this.addressString = addressString;
        this.addressType = addressType;
        this.lockArgs = lockArgs;
        if (!lockArgs) {
            switch (addressType) {
                case AddressType.eth:
                    this.addressString = addressString.toLowerCase();
                    this.lockArgs = this.addressString;
                    break;
                case AddressType.eos:
                    throw new Error('lock args must provided for eos address');
                case AddressType.tron:
                    this.lockArgs =
                        '0x' +
                            Buffer.from(bs58_1.default.decode(addressString)).toString('hex', 1, 21);
                    break;
                case AddressType.ckb:
                    const lock = utils_1.parseAddress(this.addressString, {
                        config: utils_1.LumosConfigs[getDefaultPrefix()],
                    });
                    this.lockArgs = lock.args;
                    break;
            }
        }
    }
    static fromLockScript(lockScript, prefix = getDefaultPrefix()) {
        const addressString = utils_1.generateAddress(lockScript.serializeJson(), {
            config: utils_1.LumosConfigs[prefix],
        });
        return new Address(addressString, AddressType.ckb);
    }
    static async getEosLockArgs(networkJSON, account) {
        const network = core_2.default.Network.fromJson(networkJSON);
        const baseUrl = network.fullhost();
        const res = await axios_1.default.post(`${baseUrl}/v1/chain/get_account`, {
            account_name: account,
        });
        const data = res.data;
        const pubkey = data.permissions[0].required_auth.keys[0].key;
        const publicKeyHex = eosjs_ecc_1.default.PublicKey(pubkey).toUncompressed().toHex();
        const publicHash = new hashers_1.Keccak256Hasher()
            .hash(new ckb_js_toolkit_1.Reader(`0x${publicKeyHex.slice(2)}`))
            .serializeJson();
        const lockArgs = '0x' + publicHash.slice(-40);
        return lockArgs;
    }
    valid() {
        switch (this.addressType) {
            case AddressType.ckb:
                return utils_1.verifyCkbAddress(this.addressString);
            case AddressType.eth:
                return utils_1.verifyEthAddress(this.addressString);
            case AddressType.eos:
                return utils_1.verifyEosAddress(this.addressString);
            case AddressType.tron:
                return utils_1.verifyTronAddress(this.addressString);
            default:
                return true;
        }
    }
    minPaymentAmount() {
        if (this.isAcp()) {
            return new amount_1.Amount('1', amount_1.AmountUnit.shannon);
        }
        const bytes = utils_1.cellOccupiedBytes({
            lock: this.toLockScript(),
            type: null,
            data: '0x',
        });
        return new amount_1.Amount(bytes.toString());
    }
    isAcp() {
        const script = this.toLockScript();
        const { codeHash, hashType } = script;
        const acpLock = core_1.default.config.acpLockList.filter((x) => x.codeHash === codeHash && x.hashType === hashType);
        return acpLock && acpLock.length > 0;
    }
    toCKBAddress() {
        if (this.addressType === AddressType.ckb) {
            return this.addressString;
        }
        const prefix = getDefaultPrefix();
        return utils_1.generateAddress(this.toLockScript().serializeJson(), {
            config: utils_1.LumosConfigs[prefix],
        });
    }
    toLockScript() {
        if (this.addressType !== AddressType.ckb) {
            const { codeHash, hashType } = core_1.default.config.pwLock.script;
            return new script_1.Script(codeHash, this.lockArgs, hashType);
        }
        const lock = utils_1.parseAddress(this.addressString, {
            config: utils_1.LumosConfigs[getDefaultPrefix()],
        });
        return new script_1.Script(lock.code_hash, lock.args, interfaces_1.HashType[lock.hash_type]);
    }
}
exports.Address = Address;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkcmVzcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9tb2RlbHMvYWRkcmVzcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEscUNBQWtDO0FBQ2xDLGdEQUEwQztBQUMxQyw4Q0FBeUM7QUFDekMsMERBQTRCO0FBQzVCLG9DQVNrQjtBQUNsQixnREFBd0I7QUFDeEIsa0RBQTBCO0FBQzFCLDJEQUF3QztBQUN4Qyx3Q0FBNkM7QUFDN0Msc0RBQTJDO0FBQzNDLHFDQUE4QztBQUU5QyxJQUFZLGFBR1g7QUFIRCxXQUFZLGFBQWE7SUFDdkIsK0NBQUcsQ0FBQTtJQUNILCtDQUFHLENBQUE7QUFDTCxDQUFDLEVBSFcsYUFBYSxHQUFiLHFCQUFhLEtBQWIscUJBQWEsUUFHeEI7QUFFRCxJQUFZLFdBTVg7QUFORCxXQUFZLFdBQVc7SUFDckIsMkNBQUcsQ0FBQTtJQUNILDJDQUFHLENBQUE7SUFDSCwyQ0FBRyxDQUFBO0lBQ0gsNkNBQUksQ0FBQTtJQUNKLFNBQVM7QUFDWCxDQUFDLEVBTlcsV0FBVyxHQUFYLG1CQUFXLEtBQVgsbUJBQVcsUUFNdEI7QUFFRCxJQUFZLFFBSVg7QUFKRCxXQUFZLFFBQVE7SUFDbEIsNkNBQU8sQ0FBQTtJQUNQLCtDQUFRLENBQUE7SUFDUixtQ0FBRSxDQUFBO0FBQ0osQ0FBQyxFQUpXLFFBQVEsR0FBUixnQkFBUSxLQUFSLGdCQUFRLFFBSW5CO0FBRUQsU0FBZ0IsZ0JBQWdCO0lBQzlCLE9BQU8sY0FBTSxDQUFDLE9BQU8sS0FBSyxjQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDO0FBQ2hGLENBQUM7QUFGRCw0Q0FFQztBQUVELE1BQWEsT0FBTztJQStCbEIsWUFDVyxhQUFxQixFQUNyQixXQUF3QixFQUN4QixRQUFpQjtRQUZqQixrQkFBYSxHQUFi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
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { ContractOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import {
  Callback,
  PayableTransactionObject,
  NonPayableTransactionObject,
  BlockType,
  ContractEventLog,
  BaseContract,
} from "./types";

interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export interface Trust extends BaseContract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  ): Trust;
  clone(): Trust;
  methods: {
    admin(): NonPayableTransactionObject<string>;

    kids(
      arg0: string
    ): NonPayableTransactionObject<{
      amount: string;
      maturity: string;
      paid: boolean;
      0: string;
      1: string;
      2: boolean;
    }>;

    addKid(
      kid: string,
      timeToMaturity: number | string | BN
    ): PayableTransactionObject<void>;

    withdraw(): NonPayableTransactionObject<string>;
  };
  events: {
    allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter;
  };
}
